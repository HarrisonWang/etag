## 一、缓存验证
### 1.获取用户列表
GET http://localhost:8080/users

### 2.获取用户列表（返回304，浏览器会从自动使用缓存的内容）
GET http://localhost:8080/users
If-None-Match: "1315208442"

### 3.获取用户信息
GET http://localhost:8080/users/1

### 4.获取用户信息（返回304，浏览器会从自动使用缓存的内容）
GET http://localhost:8080/users/1
If-None-Match: "1190737283"

## 二、乐观并发控制（乐观锁）
### 1.修改用户信息
PUT http://localhost:8080/users/1
Content-Type: application/json
If-Match: "1190737283"

{
  "name": "zhangsan",
  "email": "zhangsan@example.com"
}

### 2.修改用户信息（返回412，表示资源已经被修改）
PUT http://localhost:8080/users/1
Content-Type: application/json
If-Match: "927973113"

{
  "name": "zhangsan",
  "email": "zhangsan@example.com"
}

### 1.新建用户
POST http://localhost:8080/users
Content-Type: application/json

{
  "name": "zhangsan",
  "email": "zhangsan@example.com",
  "password": "123456"
}

### 2.删除用户
DELETE http://localhost:8080/users/1

## 三、自定义方法
### 1.激活用户
POST http://localhost:8080/users/123:activate

### 2.停用用户
POST http://localhost:8080/users/456:deactivate

### 3.重置密码
POST http://localhost:8080/users/1:resetPassword
Content-Type: application/json

{
  "currentPassword": "password",
  "newPassword": "654321"
}

## 四、API 版本控制
### 1.获取用户信息v1
GET http://localhost:8080/users/1
Accept: application/vnd.example.v1+json

### 2.获取用户信息v2
GET http://localhost:8080/users/1
Accept: application/vnd.example.v2+json